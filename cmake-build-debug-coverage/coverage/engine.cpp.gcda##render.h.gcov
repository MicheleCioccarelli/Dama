        -:    0:Source:/home/sedano/CLionProjects/Dama/render/render.h
        -:    0:Graph:/home/sedano/CLionProjects/Dama/cmake-build-debug-coverage/CMakeFiles/MakeDamaGreatAgain.dir/engine/engine.cpp.gcno
        -:    0:Data:/home/sedano/CLionProjects/Dama/cmake-build-debug-coverage/CMakeFiles/MakeDamaGreatAgain.dir/engine/engine.cpp.gcda
        -:    0:Runs:1
        -:    1:#pragma once
        -:    2:
        -:    3:#include "../board/board.h"
        -:    4:#include "../enums/BoardStyles.h"
        -:    5:
        -:    6:struct BoardTokens {
        -:    7:public:
        -:    8:    std::string horizontalLine;
        -:    9:    std::string verticalLine;
        -:   10:    std::string topLeft;
        -:   11:    std::string topRight;
        -:   12:    std::string bottomLeft;
        -:   13:    std::string bottomRight;
        -:   14:    std::string upChain;
        -:   15:    std::string downChain;
        -:   16:    std::string rightBorder;
        -:   17:    std::string link;
        -:   18:    std::string leftBorder;
        -:   19:    std::string filling;
        -:   20:
        -:   21:    explicit BoardTokens(BoardStyles style) {
        -:   22:        switch (style) {
        -:   23:            case NORMAL:
        -:   24:                horizontalLine = "═";
        -:   25:                verticalLine = "‖";
        -:   26:                topLeft = "╔";
        -:   27:                topRight = "╗";
        -:   28:                bottomLeft = "╚";
        -:   29:                bottomRight = "╝";
        -:   30:                upChain = "╦";
        -:   31:                downChain = "╩";
        -:   32:                rightBorder = "╣";
        -:   33:                link = "╬";
        -:   34:                leftBorder = "╠";
        -:   35:                filling = " ";
        -:   36:                break;
        -:   37:        }
        -:   38:    }
        -:   39:};
        -:   40:
        -:   41:struct SetPieces {
        -:   42:    std::string damaB;
        -:   43:    std::string damaN;
        -:   44:    std::string damoneB;
        -:   45:    std::string damoneN;
        -:   46:    std::string vuota;
        -:   47:    std::string colorata;
        -:   48:
        -:   49:    SetPieces(BoardStyles style) {
        -:   50:        switch (style) {
        -:   51:            case NORMAL:
        -:   52:                damaB = "●";
        -:   53:                damaN = "○";
        -:   54:                damoneB = "▲";
        -:   55:                damoneN = "Δ";
        -:   56:                vuota = " ";
        -:   57:                colorata = "█";
        -:   58:                break;
        -:   59:        }
        -:   60:    }
        -:   61:};
        -:   62:
        -:   63:struct BoardCoords {
        -:   64:    char a;
        -:   65:    char b;
        -:   66:    char c;
        -:   67:    char d;
        -:   68:    char e;
        -:   69:    char f;
        -:   70:    char g;
        -:   71:    char h;
        -:   72:
        -:   73:    BoardCoords(BoardStyles style) {
        -:   74:        switch (style) {
        -:   75:            case NORMAL:
        -:   76:                a = 'a';
        -:   77:                b = 'b';
        -:   78:                c = 'c';
        -:   79:                d = 'd';
        -:   80:                e = 'e';
        -:   81:                f = 'f';
        -:   82:                g = 'g';
        -:   83:                h = 'h';
        -:   84:                break;
        -:   85:        }
        -:   86:    }
        -:   87:};
        -:   88:
        -:   89:class StdRender {
        -:   90:    BoardTokens boardTokens;
        -:   91:    SetPieces setPieces;
        -:   92:    BoardCoords boardCoords;
        -:   93:public:
        -:   94:    void border(std::string &lastChar);
        -:   95:    void first_line();
        -:   96:    void bottom_line(PlayerColor color);
        -:   97:    void line();
        -:   98:    void middle(Board &board, PlayerColor color);
        -:   99:    std::string square_resolve(Coords coords, Board &board);
        -:  100:    void render_board(PlayerColor color, Board &b);
        -:  101:
        1:  102:    StdRender(BoardTokens &_boardTokens, SetPieces &_setPieces, BoardCoords &_boardcoords)
        1:  103:        : boardTokens(_boardTokens), setPieces(_setPieces), boardCoords(_boardcoords) {}
        -:  104:};
